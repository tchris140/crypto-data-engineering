version: '3.8'

services:
  # PostgreSQL database with pgvector
  postgres:
    image: pgvector/pgvector:pg14
    container_name: crypto_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-postgres}
      POSTGRES_DB: ${DB_NAME:-crypto_data}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - crypto_network

  # Crypto data engineering application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: crypto_app
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME:-crypto_data}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - cmc_api_key=${cmc_api_key}
      - REDDIT_CLIENT_ID=${REDDIT_CLIENT_ID}
      - REDDIT_CLIENT_SECRET=${REDDIT_CLIENT_SECRET}
      - REDDIT_USER_AGENT=${REDDIT_USER_AGENT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      - ./:/app
      - ./logs:/app/logs
    command: help
    networks:
      - crypto_network

volumes:
  postgres_data:

networks:
  crypto_network:
    driver: bridge 