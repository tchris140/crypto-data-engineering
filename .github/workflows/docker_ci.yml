name: Docker CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.9'

      - name: Install linting dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 black isort

      - name: Run Flake8
        run: flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics

      - name: Check formatting with Black
        run: black --check .

      - name: Check imports with isort
        run: isort --check --profile black .

  build-and-test:
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build Docker images
        run: docker-compose build

      - name: Start containers
        run: docker-compose up -d

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client
      
      - name: Wait for PostgreSQL to be ready
        run: |
          echo "Waiting for PostgreSQL to start..."
          until docker-compose exec -T postgres pg_isready -U postgres; do
            echo "PostgreSQL is not ready yet, waiting..."
            sleep 2
          done
          echo "PostgreSQL is ready!"

      - name: Check pgvector extension
        run: |
          docker-compose exec -T postgres psql -U postgres -d crypto_data -c "SELECT extname FROM pg_extension WHERE extname = 'vector'"

      - name: Run pgvector tests
        run: docker-compose run --rm app test

      - name: Run mock mode tests
        run: |
          echo "Testing DeFi Llama scraper in mock mode..."
          docker-compose run --rm app defi --mock
          
          echo "Testing Reddit scraper in mock mode..."
          docker-compose run --rm app reddit --mock
          
          echo "Testing RAG system in mock mode..."
          docker-compose run --rm app rag --mock --query "Bitcoin"

      - name: Verify container logs
        run: docker-compose logs

      - name: Stop and remove containers
        if: always()  # Run this step even if previous steps fail
        run: docker-compose down -v 